// Code generated by MockGen. DO NOT EDIT.
// Source: accrual/accrual.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/serjyuriev/diploma-1/internal/pkg/models"
)

// MockAccrual is a mock of Accrual interface.
type MockAccrual struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualMockRecorder
}

// MockAccrualMockRecorder is the mock recorder for MockAccrual.
type MockAccrualMockRecorder struct {
	mock *MockAccrual
}

// NewMockAccrual creates a new mock instance.
func NewMockAccrual(ctrl *gomock.Controller) *MockAccrual {
	mock := &MockAccrual{ctrl: ctrl}
	mock.recorder = &MockAccrualMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrual) EXPECT() *MockAccrualMockRecorder {
	return m.recorder
}

// GetOrderStatus mocks base method.
func (m *MockAccrual) GetOrderStatus(ctx context.Context, order string) (*models.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderStatus", ctx, order)
	ret0, _ := ret[0].(*models.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderStatus indicates an expected call of GetOrderStatus.
func (mr *MockAccrualMockRecorder) GetOrderStatus(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderStatus", reflect.TypeOf((*MockAccrual)(nil).GetOrderStatus), ctx, order)
}
